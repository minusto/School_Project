<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kosta.mapper.Mapper">
	<cache />
	<!-- 시스템관리자 ==> 학교관리자 등록 -->
	<insert id="insertSchoolAdmin" parameterType="SchoolAdmin">
		insert into SchoolAdmin(
			SchoolAdminId,SchoolAdminPassword,SchoolAdminName,SchoolAdminTel,DeleteRequest
		)
		values(
			#{schoolAdminId},'1234',#{schoolAdminName},#{schoolAdminTel},'n'
		)
	</insert>
	<insert id="insertSchoolAdminRegist" parameterType="SchoolAdminRegist">
		insert into SchoolAdminRegist(
			SystemAdminId,SchoolAdminId,SchoolRegistDate,SchoolEndDate
		)values(
			#{systemAdminId},#{schoolAdminId},SYSDATE,#{schoolEndDate}
		)
	</insert>
	
	<!-- 학생목록 출력 -->
	<select id="studentList" resultType="StudentList">
		SELECT m.memberid, m.membername, m.memberbirthday, m.schoolid, st.studentcode, st.studentgrade, st.studentclass, st.studentnum, st.studentgender, st.studentmajor 
		FROM member m, student st
		WHERE m.memberid = st.memberid
		ORDER BY m.memberid
	</select>

	<!-- 학부모 정보 입력 -->
	<update id="insertParent" parameterType="Parent">
		UPDATE parent SET 
			parentName = #{parentName}, familyRelation =  #{familyRelation}, memberId = #{memberId}
		WHERE parentId = #{parentId}
	</update>

	<!-- 액터 : 시스템관리자 ==> 학교관리자 리스트 출력 schoolAdminList.jsp -->
	<select id="adminList" resultType="AdminList">
		select a.schooladminid,a.schooladmintel,a.deleterequest,b.schoolregistdate,b.schoolenddate
		from schooladmin a,schooladminregist b
		where a.schooladminid=b.schooladminid
	</select>

	<!-- 액터 : 교사 => 학부모리스트 출력 -->
	<select id="parentList" resultType="ParentList">
		SELECT p.parentId, p.parentName, p.familyRelation, st.memberId, m.memberName
		FROM parent p, student st, member m
		WHERE p.memberId = st.memberId
			AND st.memberId = m.memberId
	</select>
	<!-- 액터 : 교내관리자 => 학교등록  -->
	<insert id="insertSchool" parameterType="school">
		INSERT INTO school(
		schoolId , schoolName , schoolAddress , schoolTel
		)VALUES(
		#{schoolId}, #{schoolName} , #{schoolAddress} , #{schoolTel}
		)
	</insert>
	
	<!-- 액터 : 시스템관리자 ==> 학교관리자 상세보기 -->
	<select id="schoolAdminDetail" resultType="SchoolAdminDetail" parameterType="String">
		SELECT s.schoolname,sa.schooladminid,sa.schooladminname,sa.schooladmintel,
		sa.deleterequest,sar.schoolregistdate,sar.schoolenddate
		FROM schooladmin sa,schoolregist sr,school s,schooladminregist sar
		WHERE sa.schooladminid=sr.schooladminid
		AND sr.schoolid=s.schoolid
		AND sa.schooladminid=sar.schooladminid
		AND sa.schooladminid=#{id}
	</select>
	
	<!-- 액터 : 학교관리자 ==> 교사등록 -->
	<insert id="insertMember" parameterType="member">
		INSERT INTO member(
			memberId , memberName , memberBirthday , memberTel
			, memberEmail , memberNote , memberPassword , memberAddress , schoolId
		)VALUES(
			#{memberId} , #{memberName} , SYSDATE , #{memberTel}
			, #{memberEmail} , #{memberNote} ,'1234' , #{memberAddress} , #{schoolId} 
		)
	</insert>
	<insert id="insertTeacher" parameterType="teacher">
		INSERT INTO teacher(
		teacherClass , teacherPicture , teacherPosition , subjectId  , memberId
		)VALUES(
		${teacherClass}, #{teacherPicture} , #{teacherPosition} , #{subjectId} , #{memberId}
		)
	</insert>
	
	<!-- 액터 : 학교관리자 ==> 교사리스트 -->
	<select id="listTeacher" resultType="TeacherDetail">
	SELECT m.memberId , m.memberBirthday , m.memberTel , m.memberEmail , m.memberName , t.teacherClass , t.subjectId
	FROM teacher t , member m
	WHERE t.memberId = m.memberId
	</select>
	
	<!-- 액터 : 학교관리자 ==> 교사리스트 ==> 상세보기 --> 
	<select id="detailTeacher" resultType="TeacherDetail" parameterType="int">
	SELECT * FROM teacher t , member m
	WHERE t.memberId = m.memberId
	</select>
	
	<!-- 액터 : 모든사용자 ==> 로그인정보 확인 -->
	<select id="memberCheck" resultType="MemberCheck" parameterType="String">
		SELECT m.memberid,m.memberpassword,rm.membergrade
		FROM member m,registmanage rm
		WHERE m.memberid=rm.memberid
		AND m.memberid=#{id}
	</select>
	
</mapper>